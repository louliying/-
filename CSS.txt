1. 盒子模型
	所有HTML元素可以看作盒子。它包括：边距，边框，填充，和实际内容。
	标准盒子模型：
		总的元素宽度 = 内容的宽度（content）+ border + padding + margin
	低版本IE盒子模型：
		总的元素宽度 = 内容宽度（content+border+padding）+ margin
	css中设置的width，就是内容的宽度
	在标准例子中，是content,
	在非标准盒子中，是content+border+padding

	box-sizing:控制元素的盒子模型的解析模式，默认为content-box
		context-box：W3C的标准盒子模型，设置元素的 height/width 属性指的是content部分的高/宽
		border-box：IE传统盒子模型。设置元素的height/width属性指的是border + padding + content部分的高/宽

	弹性盒子模型：Flexible Box 或 flexbox
		CSS3新增的，
		是一种当页面需要适应不同的屏幕大小以及设备类型时确保元素拥有恰当的行为的布局方式。
		组成：弹性容器(flex container)+  弹性子元素(flex items)
		弹性容器：通过设置display: flex/inline-flex
		弹性子元素：通常在弹性盒子内一行显示。默认情况每个容器只有一行

		弹性容器的属性：	
			a. flex-direction:容器内子元素的排列方式
								row row-reverse  column  column-reverse
			b. flex-wrap: 容器是单行还是多行
								nowrap(不拆行/列)	wrap  wrap-reverse
			c. flex-flow: flex-direction 和 flex-wrap 的简写
							是个复合属性，
							默认值为"row nowrap"
			d. align-items:  感觉它是Y轴，垂直方向 
					子元素在侧轴（纵轴）方向上的对齐方式
							stretch(默认值，拉伸以适应容器)
							center：位于容器中心
							flex-start: 位于容器开头
							flex-end: 位于容器结尾
							baseline:位于容器基线上
			e.align-content: 
				修改 flex-wrap 属性的行为，类似 align-items, 但不是设置子元素对齐，而是设置行对齐
			f.justify-content: 感觉它是X轴，水平方向
					设置弹性盒子元素在主轴（横轴）方向上的对齐方式
					lex-start：默认值，位于容器的开头。
					flex-end：位于容器的结尾。
					center：位于容器的中心。
					space-between：位于各行之间留有空白的容器内。
					space-around：位于各行之前、之间、之后都留有空白的容器内。

			https://www.jianshu.com/p/5856c4ae91f2


2. 让div居中：
	普通div: width, margin: 0 auto;
	浮动div:  width, float:left, positon:absolute, left:0, right:0, margin: 0 auto
	absolute的div: width, posotion: absolute, left:0, right:0, margin:0 auto
					width, posotion: absolute, left:50%, margin-left: -width/2

3. CSS实现三角形：
	width: 0;
	height: 0;
	border-top: 40px solid transparent;
	border-left: 40px solid transparent;
	border-right: 40px solid transparent;
	border-bottom: 40px solid #ff0000;

	容器是有80px的宽高了

4. 同时有position，display、overflow、float
	display属性规定元素应该生成的框的类型；
	position属性规定元素的定位类型；
	float属性是一种布局方式，定义元素在哪个方向浮动。
	类似于优先级机制：position：absolute/fixed优先级最高，有他们在时，float不起作用，display值需要调整。float 或者absolute定位的元素，只能是块元素或表格


5. BFC规范(块级格式化上下文：block formatting context)
	满足下列条件之一就可触发BFC
		a. 根元素，即html
		b. float的值不为none（默认）
		c. overflow的值不为visible（默认）
		d. display的值为inline-block、table-cell、table-caption
		e. position的值为absolute或fixed
6. 清除浮动：
	清除浮动的方式：
		a. 父级div定义height
		b. 最后一个浮动元素后加空div标签 并添加样式clear:both。
		c. 包含浮动元素的父标签添加样式overflow为hidden或auto。
		d. 父级div定义zoom
		&::after,&::before{
	        content: " ";	
			visibility: hidden;
			display: block;
			height: 0;
			clear: both;
		}
		zoom：1 触发IE hasLayout。
7. 在网页中的应该使用奇数还是偶数的字体？为什么呢？

	使用偶数字体。偶数字号相对更容易和 web 设计的其他部分构成比例关系。Windows 自带的点阵宋体（中易宋体）从 Vista 开始只提供 12、14、16 px 这三个大小的点阵，而 13、15、17 px时用的是小一号的点。（即每个字占的空间大了 1 px，但点阵没变），于是略显稀疏
8. 元素竖向的百分比设定是相对于容器的高度吗？
	水平方向的属性padding-left等： %，是根据父容器的宽度
	垂直方向的属性padding-top等： %， 也是根据父容器的宽度，而不是高度

9. ::before 和 :after中双冒号和单冒号区别？作用
	单冒号(:)用于CSS3伪类，
	双冒号(::)用于CSS3伪元素。
	::before就是以一个子元素的存在，定义在元素主体内容之前的一个伪元素。并不存在于dom之中，只存在在页面之中。
	:before 和 :after 这两个伪元素，是在CSS2.1里新出现的。起初，伪元素的前缀使用的是单冒号语法，但随着Web的进化，在CSS3的规范里，伪元素的语法被修改成使用双冒号，成为::before ::after

	也就是说， CSS3后， 都是有:: 了

10. 让chrome支持12px以下的字体 
	font-size: 10px; transfrom: scale(0.8)

11. 让字体变得清晰：-webkit-font-smoothing
	-webkit-font-smoothing在window系统下没有起作用，但是在IOS设备上起作用-webkit-font-smoothing：antialiased是最佳的，灰度平滑。

12. 如果需要手动写动画，最小时间间隔是多久？
	多数显示器默认频率是60Hz，即1秒刷新60次，所以理论上最小间隔为1/60＊1000ms ＝ 16.7ms

13. li与li之间有看不见的空白间隔是什么原因引起的
	行框的排列会受到中间空白（回车空格）等的影响，因为空格也属于字符,这些空白也会被应用样式，占据空间，所以会有间隔，把字符大小设为0，就没有空格了。
	解决方法：
		a. 可以将<li>代码全部写在一排
		b. 浮动li中float：left
		c. 在ul中用font-size：0（谷歌不支持）；可以使用letter-space：-3px

14, png、jpg、gif 分别什么时候用。有没有了解过webp？
	png：便携式网络图片（Portable Network Graphics）
		是一种无损数据压缩位图文件格式.
		优点是：压缩比高，色彩好。 大多数地方都可以用。
	jpg：一种针对相片使用的一种失真压缩方法，
		是一种破坏性的压缩，在色调及颜色平滑变化做的不错。
	gif：是一种位图文件格式，以8位色重现真色彩的图像。
		可以实现动画效果.
	webp：格式是谷歌在2010年推出的图片格式，
		压缩率只有jpg的2/3，大小比png小了45%。
		缺点：压缩的时间更久了，
				兼容性不好，目前谷歌和opera支持。
15. CSS优先级算法如何计算？
	元素选择符： 1
	class选择符： 10
	id选择符：100
	元素标签：1000

	!important声明的样式优先级最高，如果冲突再进行计算。
	如果优先级相同，则选择最后出现的样式。
	继承得到的样式的优先级最低。

16. 浏览器的内核 
	Trident内核:IE系列
	Gecko内核:Firefox
	Webkit内核:Safari
	Blink内核：是基于Webkit内核的子项目,使用的浏览器有：
	Chrome/opera等除IE、Firefox、Safari之外的几乎所有浏览器
	几乎所有国产双内核浏览器（Trident/Blink）如360、猎豹、qq、百度等
17. 一个页面上有大量的图片,加载很慢，可改进点：
	1. 图片懒加载
	2. 图片预加载：将当前展示图片的前一张和后一张优先下载。
	3. css图片：使用CSSsprite， SVGsprite， Iconfont、 Base64 
	4. 图片过大，可以使用特殊编码的图片，加载时会先加载一张压缩的特别厉害的缩略图，以提高用户体验。
	5. 图片压缩： 
18. 介绍一下你对浏览器内核的理解
	渲染引擎(layout engineer或Rendering Engine)和JS引擎

	渲染引擎：负责取得网页的内容（HTML、XML、图像等等）、整理讯息（例如加入CSS等），以及计算网页的显示方式，然后会输出至显示器或打印机。浏览器的内核的不同对于网页的语法解释会有不同，所以渲染的效果也不相同。所有网页浏览器、电子邮件客户端以及其它需要编辑、显示网络内容的应用程序都需要内核

	JS引擎则：解析和执行javascript来实现网页的动态效果
19. display：inline-block，怎么去掉显示的间隙
	a. 移除空格、
	b. 使用margin负值、
	c. 使用font-size:0、
	d. letter-spacing、
	e. word-spacing、
	f. 浮动
20.  rgba()和opacity的透明区别
	rgba()和opacity都能实现透明效果，
	opacity：作用于元素，以及元素内的所有内容的透明度，
	rgba():只作用于元素的颜色或其背景色。（设置rgba透明的元素的子元素不会继承透明效果！）

21. 单位： px, rem, em 
	px: 固定
	rem: 相对于html字体大小
	em: 相对于其父元素字体大小

22. 什么情况会触发重排和重绘
	重排负责元素的几何属性更新，重绘负责元素的样式更新
	重排肯定带来重绘
	重排：DOM的变化引发了元素几何属性的变化
		a. 添加或删除可见的DOM元素
		b. 元素位置改变
		c. 元素本身的尺寸发生改变
		d. 内容改变
		e. 页面渲染器初始化
		f. 浏览器窗口大小发生改变

23. animation对应的属性
	animation: name duration time-function delay iteration-count direction
	animation-name: 动画名称，即keyframe名称
	animation-duration: 完成动画所需时间，秒或毫秒
	animation-time-function: 动画的速度曲线
	animation-delay: 动画延迟多久才开始
	animation-iteration-count: 动画播放的次数
	animation-direction：是否要轮流反向播放动画

24. transtion:
	只是设置了从开始到结束，二个点的动画
	transition: property duration timing-function delay;
	transiton-property: 过渡效果的CSS属性，可以是某个，可以是"all"
	transition-duration:完成过渡效果需要多少秒或毫秒。
	transition-timimg-function:速度效果的速度曲线。
	transition-delay: 过渡效果何时开始。
	animation是可以设置整个 动画里的任何一个点。

25. transform:
	它是形变，不是动画
	对元素进行旋转、缩放、移动或倾斜
	transform: none|transform-functions;

	transform: translate(x, y)
			 : translate3d(x,y,z)
			 : translateX()..Z
			 : rotate(-180deg)
			 : rotate3d(x,y, z, angle)
			 : rotateX...Z
			 : scale(1.6)
			 : scale3d(x,y,z)
			 : scaleX()..Z
			 : skew(x-angle, y-angle)
			 : skewX(), skewY()
			 : perspective(n)为 3D 转换元素定义透视视图。
24. 有哪些多屏适配方案
	1.  media query + rem
	2.  flex
	3.  弹性布局
25. 触摸事件的响应顺序
	ontouchstart
	ontouchmove
	ontouchend
	onclick
26. video标签的几个个属性方法
	src：视频的URL
	poster：视频封面，没有播放时显示的图片
	preload：预加载
	autoplay：自动播放
	loop：循环播放
	controls：浏览器自带的控制条
	width：视频宽度
	height：视频高度
27. 页面导入样式时，使用link和@import有什么区别？
	1.link是HTML标签，@import是css提供的。
	2.link引入的样式页面加载时同时加载，@import引入的样式需等页面加载完成后再加载。
	3.link没有兼容性问题，@import不兼容ie5以下。
	4.link可以通过js操作DOM动态引入样式表改变样式，而@import不可以。


3. 不知宽高下，水平垂直居中图片


4. animation


5.