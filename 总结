

一、JavaScript

1.什么是Event Loop
Event Loop 是一个很重要的概念，指的是计算机系统的一种运行机制,来解决单线程运行带来的一些问题
简单说，就是在程序中设置两个线程：一个负责程序本身的运行，称为"主线程"；另一个负责主线程与其他进程（主要是各种I/O操作）的通信，被称为"Event Loop线程"（可以译为"消息线程"）。

2.js同步异步
同步任务：指的是在主线程上排队执行的任务，只有前一个任务执行完毕，才能执行后一个任务
异步任务： 指的是不进入主线程，某个异步任务可以执行了，该任务才会进入主线程执行。
3.js异步运行机制
异步执行的运行机制如下(同步任务也如此，因为它可以被视为没有异步任务的异步执行)：
   所有同步任务都在主线程上执行，形成一个执行栈(execution context stack)
主线程之外，还存在一个“任务队列”，只要异步任务有了运行结果，就在“任务队列”之中放置一个事件
   一旦“执行栈”中的所有同步任务执行完毕，系统就会读取“任务队列”，看看里面有哪些事件。那些对应的异步任务，于是结束等待，进入执行栈，开始执行
   主线程不断重复第3步
4.微任务和宏任务
macro-task(宏任务)：包括整体代码script，setTimeout，setInterval
micro-task(微任务)：Promise，process.nextTick
不同类型的任务会进入不同的Event Queue，有宏任务的队列和微任务的队列。

事件循环的顺序，决定js代码的执行顺序。进入整体代码(宏任务)后，开始第一次循环。接着执行所有的微任务。然后再次从宏任务开始，找到其中一个任务队列执行完毕，再执行所有的微任务。

宏任务队列可以有多个，微任务队列只有一个；
主线程上的任务是第一个宏任务；
会建立宏任务的有：setTimeOut、 setInterval、 requestAnimationFrame
会建立微任务的有：Promise的回调、 process.nextTick
当有一个宏任务队列执行完毕后，会执行微任务队列中的全部内容，然后执行另一个宏任务队列，如此反复

5.作用域/作用域链/闭包

变量的作用域无非就是两种：全局变量和局部变量。 


6.箭头函数，能在箭头里用apply call等修改this指向吗？

 箭头函数有几个使用注意点。
（1）函数体内的this对象，就是定义时所在的对象，而不是使用时所在的对象。

（2）不可以当作构造函数，也就是说，不可以使用new命令，否则会抛出一个错误。

（3）不可以使用arguments对象，该对象在函数体内不存在。如果要用，可以用Rest参数代替。

（4）不可以使用yield命令，因此箭头函数不能用作Generator函数。

 this指向的固定化，并不是因为箭头函数内部有绑定this的机制，实际原因是箭头函数根本没有自己的this，导致内部的this就是外层代码块的this。正是因为它没有this，所以也就不能用作构造函数。

 另外，由于箭头函数没有自己的this，所以当然也就不能用call()、apply()、bind()这些方法去改变this的指向。

7.事件委托

8.动态添加一个标签并赋予一个事件，怎么实现调用？

9.有两个数组怎么判断相等？（数组有可能是多维数组）

10.说下你知道的数组方法？

11.用过ts吧，说说你了解多少？




二、ES6
  1. 有了解ES7/ES8/ES9吗？有什么新特性？
  2. 两个变量互换值（不用第三个变量）
  3. 了解过proxy吗？是什么有什么用简单的说下
  4.了解过Map和Set吗？是什么有什么用？
  5.什么是promise？

三、Vue

1. vuex原理
   getter的作用是什么？它能否双向绑定？如果能为什么不用getter进行做双向绑定？
  
2. vue生命周期
3. vue实现原理
4. .sync用过吗？是什么有什么作用？
5. 自定义一个组件在组件进行v-model双向绑定，组件里能接收到绑定的值吗？用什么接收？
6. vue3.0beta版本已经出来了有了解过吗？3.0最主要的核心是什么？

四、React

 1. react生命周期
 2. rudex实现原理及里面相关方法的作用
 3. redux和vuex有什么不同？
 4. vue和react有什么不同？
 
	

